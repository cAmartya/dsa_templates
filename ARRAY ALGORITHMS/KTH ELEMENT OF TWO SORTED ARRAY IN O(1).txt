int kthElement(vector<int> &arr1, int n, vector<int>& arr2, int m, int k){

    if(n<m)    {
        return kthElement(arr2, m, arr1, n, k);
    }
    
    int low = max(0, k-n), high = min(k, m);

    while(low <= high)  {
        int mid = low + (high-low)/2;
        int cut = k - mid;
        int l1 = (mid == 0)? INT_MIN : arr1[mid -1];
        int l2 = (cut == 0)? INT_MIN : arr2[cut -1];
        int r1 = (mid == n)? INT_MAX : arr1[mid];
        int r2 = (cut == m)? INT_MAX : arr2[cut];
        
        if(l1 <= r2 && l2 <= r1)  {
            return max(l1, l2);
        }else if(l1 > r2 && l2 <= r1) {
            high = mid-1;
        }else   {
            low = mid+1;
        }
    }
    return -1;
}
