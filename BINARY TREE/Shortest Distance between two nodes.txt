#include <bits/stdc++.h>
using namespace std;

#define vi vector<int>
#define pii pair<int, int>
#define vii vector<pii>
#define ff first
#define ss second
#define INF 0x3f3f3f3f
#define rep(i, a, b) for(int i=a; i<b; i++)

class node
{
    public : 
    int data;
    node* left;
    node* right;
    
    node(int v)
    {
        this -> data = v;
        this -> left = NULL;
        this -> right = NULL;
    }
};

bool gpath(node* root, int k, vi& p)
{
    if(root == NULL)
    return 0;
    
    p.push_back(root -> data);
    if(root -> data == k)
    return 1;
    
    if(gpath(root -> left, k, p) || gpath(root -> right, k, p))
    return 1;
    
    p.pop_back();
    return 0;
}

int sdist(node* root, int n1, int n2)
{
    vi p1, p2;
    if(!gpath(root, n1, p1) || !gpath(root, n2, p2))
    return -1;
    
    int idx;
    for(idx=0; idx < min(p1.size(), p2.size()); idx++)
    {
        if(p1[idx] != p2[idx])
        break;
    }
    
    return p1.size() + p2.size() - 2* idx;
}

int main() {
    
    node* root = new node(8);
    root -> left = new node(3);
    root -> right = new node(12);
    root -> left -> right = new node(6);
    root -> left -> left = new node(1);
    root -> left -> right -> left = new node(4);
    root -> left -> right -> right = new node(7);
    root -> left -> left -> left = new node(0);
    root -> left -> left -> right = new node(2);
    root -> right -> left = new node(10);
    root -> right -> left -> left = new node(9);
    root -> right -> left -> right = new node(11);
    root -> right -> right = new node(17);
    root -> right -> right -> left = new node(15);
    root -> right -> right -> right = new node(18);
    
    cout << sdist(root, 4, 7);
    
	return 0;
}
