class Solution {
public:
    bool wordBreak(string s, vector<string>& wordDict) {
        int n = s.length();
        unordered_set<string> wd;
        bool dp[301][301] = {0};
        for(auto i: wordDict) wd.insert(i);
        for(int j=0; j<=n; j++) dp[n][j] = true;
        
        for(int i=n-1; i>=0; i--) {
            for(int j=n-1; j>=0; j--) {
                bool nb = dp[i][j+1];
                string t = s.substr(i, j-i+1);
                bool b = false;
                if(wd.find(t)!=wd.end()) {
                    b = dp[j+1][j+1];
                }

                dp[i][j] = (b | nb);
            }
        }
        return dp[0][0];
    }
};