long long merge(long long arr[], int l, int m, int r)
{
     // Your code here
     long long n1 = m-l+1, n2 = r-m; 
     long long a[n1];
     long long b[n2];
     long long inv = 0;
     
     for(int i=0; i<n1; i++)    {
         a[i] = arr[l+i];
     }
     for(int i=0; i<n2; i++)    {
         b[i] = arr[m+1+i];
     }
     
     int i=0, j=0, idx=l;
     while(i<n1 && j<n2)    {
         if(a[i] <= b[j])    {
             arr[idx] = a[i];
             ++i;
         }else  {
             inv += n1-i;
             arr[idx] = b[j];
             ++j;
         }
         ++idx;
     }
     
     while(i<n1)    {
         arr[idx] = a[i];
         ++i;++idx;
     }
     
     while(j<n2)    {
         arr[idx] = b[j];
         ++j;++idx;
     }
     
     return inv;
}

long long int mergeSort(long long arr[], int l, int r)
{
    
    long long inv = 0;
    if(l<r)  {
            
        int m = l +(r-l)/2;
        
        inv += mergeSort(arr, l, m);
        inv += mergeSort(arr, m+1, r);
        
        inv += merge(arr, l, m, r);
    }
    
    return inv;
}