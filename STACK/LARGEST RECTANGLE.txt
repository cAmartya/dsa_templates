    long long getMaxArea(long long arr[], int n)
    {
        // Your code here
        // ngl, ngr
        stack<pair<long long, int>> s;
        vector<int> nsl(n, 0);
        
        for(int i=0; i<n; i++)   {
            
            while(!s.empty() && s.top().first >= arr[i])  {
                s.pop();
            }
            if(s.empty())   {
                nsl[i] = -1;
            }else   {
                nsl[i] = s.top().second;
            }
            
            s.push({arr[i], i});
        }
        
        while(!s.empty())   s.pop();
        
        vector<int> nsr(n, 0);
        
        for(int i=n-1; i>=0; i--)   {
            
            while(!s.empty() && s.top().first >= arr[i])  {
                s.pop();
            }
            if(s.empty())   {
                nsr[i] = n;
            }else   {
                nsr[i] = s.top().second;
            }
            
            s.push({arr[i], i});
        }
        long long ans = INT_MIN;
        
        for(int i=0; i<n; i++)  {
            ans = max(ans, (nsr[i]-nsl[i]-1)*arr[i]);
        }
        return ans;
    }